public class Solution {
    List<List<Integer>> res=new ArrayList<List<Integer>>();
    public List<List<Integer>> threeSum(int[] nums) {
        if (nums==null || nums.length<3) return ret;
        Arrays.sort(nums);
        int len=nums.length;
        for (int i=0;i<len-2;i++){
            if (i>0 && nums[i]==nums[i-1]) continue;
            find(nums,i+1,len-1,nums[i]);
        }
        return res;
    }
    public void find(int[] nums,int begin,int end,int target){
        int l=begin;
        int r=end;
        
        while (l<r){
            if (nums[l]+nums[r]+target==0){
                List<Integer> ans=new ArrayList<Integer>();
                ans.add(target);
                ans.add(nums[l]);
                ans.add(nums[r]);
                res.add(ans);
                while (l<r && nums[l]==nums[l+1])l++;  //避免重复元素
                while (l<r && nums[r]==nums[r-1])r--;
                l++;
                r--;
            }
            else if (nums[l]+nums[r]+target>0) r--;
            else l++;
        }
    }
}
